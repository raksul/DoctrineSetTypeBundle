name: "CI"

on:
  push:
  pull_request:

env:
  fail-fast: true

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        include:
          - php-version: 7.4
            composer-flags: "--prefer-stable"
            symfony-require: "3.4.*"
          # When adding support for Symfony4, restore these comments
          # - php-version: 7.4
          #   composer-flags: "--prefer-stable"
          #   symfony-require: "4.4.*"
          #   coverage: yes
          # When adding support PHP8.0, restore these comments
          # - php-version: 8.0
          #   composer-flags: "--prefer-stable"
          #   symfony-require: "4.4.*"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 2

      - name: "Install PHP with XDebug"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.coverage != '' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "xdebug"

      - name: "Install PHP without coverage"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.coverage == '' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "none"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-symfony-${{ matrix.symfony-require }}-composer-locked-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-symfony-${{ matrix.symfony-require }}-composer-locked-"

      - name: "Install dependencies with composer"
        env:
          SYMFONY_REQUIRE: "${{ matrix.symfony-require }}"
        run: "composer update --no-interaction --no-progress ${{ matrix.composer-flags }}"

      - name: "Run PHPUnit"
        if: "${{ matrix.coverage != '' }}"
        run: |
          XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover=coverage.clover
          wget https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover coverage.clover

      - name: "Run PHPUnit"
        if: "${{ matrix.coverage == '' }}"
        run: "vendor/bin/phpunit "
